import requests
import telebot
import json
from telebot import types
import random

bot = telebot.TeleBot('8000703233:AAFbsf9GCJR-YxaEcGp91o6pN6Yr6g6Obak')

keyboard = ['üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ª–∏–∑–∏–Ω–≥']
keyboard_one: list[str] = ['üë®‚Äçü¶≥ –Æ—Ä. –ª–∏—Ü–æ', 'üßî‚Äç‚ôÇÔ∏è –ò–ü', 'üë±‚Äç‚ôÇÔ∏è –§–∏–∑. –ª–∏—Ü–æ', '‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ']
keyboard_two = ['üöó –ù–æ–≤–∞—è', 'üöï –ë/—É –Ω–µ —Å—Ç–∞—Ä—à–µ 10 –ª–µ—Ç', 'üõª –ë/—É —Å—Ç–∞—Ä—à–µ 10 –ª–µ—Ç', '‚¨ÖÔ∏è –ù–∞–∑–∞–¥', '‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ']
keyboard_three = ['üöò –õ–µ–≥–∫–æ–≤–æ–π', 'üöö –ì—Ä—É–∑–æ–≤–æ–π', 'üîå –≠–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª–∏', '‚¨ÖÔ∏è –ù–∞–∑–∞–¥', '‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ']
back = ['‚¨ÖÔ∏è –ù–∞–∑–∞–¥', '‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ']
term = ["13 –º–µ—Å.", "18 –º–µ—Å.", "24 –º–µ—Å.", "36 –º–µ—Å.", "48 –º–µ—Å.", "60 –º–µ—Å.", "84 –º–µ—Å.", '‚¨ÖÔ∏è –ù–∞–∑–∞–¥', "‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ"]
percent = ["20%", "30%", "40%", "50%", "60%", '‚¨ÖÔ∏è –ù–∞–∑–∞–¥', "‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ"]
end = ['‚¨ÖÔ∏è –ù–∞–∑–∞–¥', "üë®‚Äçüíº –°–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", "‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ"]


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
    markup.add(*keyboard)
    bot.send_message(message.chat.id,
                     text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}!\n"
                          "–ú–µ–Ω—è –∑–æ–≤—É—Ç –õ–∏–∑–∞ –∏ —è –ø–æ–º–æ–≥—É –í–∞–º —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫ –ø–ª–∞—Ç–µ–∂–µ–π –ø–æ –ª–∏–∑–∏–Ω–≥—É üìä\n"
                          "–ü–æ—Å–ª–µ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ —É –í–∞—Å –±—É–¥–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º üì≤.\n"
                          "–î–ª—è —ç—Ç–æ–≥–æ –æ—Ç–≤–µ—Ç—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤.".format(
                         message.from_user), reply_markup=markup)


@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id,
                     text="–ù–∞–∂–º–∏—Ç–µ /start –ø–æ—è–≤–∏—Ç—Å—è –º–µ–Ω—é.\n"
                          " –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∏–∂–µ.\n"
                          " –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∏ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è, –Ω–∞–∂–º–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –∏–∫–æ–Ω–∫—É –≤–æ–∑–ª–µ –ø–æ–ª—è –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è.")


@bot.message_handler(content_types=['text'])
def func(message):
    if (message.text == "üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ª–∏–∑–∏–Ω–≥" or message.text == "‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*keyboard_one)
        bot.send_message(message.chat.id, text="–ù–∞ –∫–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –ª–∏–∑–∏–Ω–≥ –∞–≤—Ç–æ?".format(message.from_user),
                         reply_markup=markup)

    elif (message.text == "üë®‚Äçü¶≥ –Æ—Ä. –ª–∏—Ü–æ"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*keyboard_two)
        msg = bot.send_message(message.chat.id, text="–í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –Ω–æ–≤–∞—è –∞–≤—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞ –∏–ª–∏ –±/—É –Ω–µ —Å—Ç–∞—Ä—à–µ 10 –ª–µ—Ç?", reply_markup=markup)
        bot.register_next_step_handler(msg, legal_entity)

    elif (message.text in ["üßî‚Äç‚ôÇÔ∏è –ò–ü", "üë±‚Äç‚ôÇÔ∏è –§–∏–∑. –ª–∏—Ü–æ"]):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*keyboard_two)
        msg = bot.send_message(message.chat.id, text="–í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –Ω–æ–≤–∞—è –∞–≤—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞ –∏–ª–∏ –±/—É –Ω–µ —Å—Ç–∞—Ä—à–µ 10 –ª–µ—Ç?", reply_markup=markup)
        bot.register_next_step_handler(msg, natural_person)

    elif (message.text == "üë®‚Äçüíº –°–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*back)
        bot.send_message(message.chat.id,
                               text="–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É, –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ <b>@davidov_max</b>",
                               reply_markup=markup, parse_mode='html')

    elif (message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*percent)
        msg = bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –í–∞—à–µ–≥–æ –∞–≤–∞–Ω—Å–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ (–æ—Ç –ø–æ–ª–Ω–æ–π —Å—Ç-—Ç–∏ –ª–µ–≥–∫–æ–≤–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è).", reply_markup=markup)
        bot.register_next_step_handler(msg, natural_person_count)

    else:
        bot.send_message(message.chat.id, text="–ù–∞ —Ç–∞–∫—É—é –∫–æ–º–º–∞–Ω–¥—É —è –Ω–µ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–ª..–≤–≤–µ–¥–∏—Ç–µ /start")


def natural_person(message):
    if (message.text in ["üöó –ù–æ–≤–∞—è", "üöï –ë/—É –Ω–µ —Å—Ç–∞—Ä—à–µ 10 –ª–µ—Ç", "üõª –ë/—É —Å—Ç–∞—Ä—à–µ 10 –ª–µ—Ç"]):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*keyboard_three)
        msg = bot.send_message(message.chat.id, text="–ö–∞–∫–æ–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=markup)
        bot.register_next_step_handler(msg, natural_person_car)

    elif (message.text == "‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*keyboard_one)
        bot.send_message(message.chat.id, text="–ù–∞ –∫–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –ª–∏–∑–∏–Ω–≥ –∞–≤—Ç–æ?".format(message.from_user),
                         reply_markup=markup)

    elif (message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*keyboard_one)
        msg = bot.send_message(message.chat.id, text="–ù–∞ –∫–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –ª–∏–∑–∏–Ω–≥ –∞–≤—Ç–æ?", reply_markup=markup)
        bot.register_next_step_handler(msg, func)

def natural_person_car(message):
    if (message.text in ["üöò –õ–µ–≥–∫–æ–≤–æ–π", "üöö –ì—Ä—É–∑–æ–≤–æ–π", "üîå –≠–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª–∏"]):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(*back)
        msg = bot.send_message(message.chat.id, text="–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –ª–µ–≥–∫–æ–≤–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è —Å –ù–î–°.", reply_markup=markup)
        bot.register_next_step_handler(msg, natural_person_term)

    elif (message.text == "‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*keyboard_one)
        bot.send_message(message.chat.id, text="–ù–∞ –∫–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –ª–∏–∑–∏–Ω–≥ –∞–≤—Ç–æ?".format(message.from_user),
                         reply_markup=markup)
    elif (message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*keyboard_two)
        msg = bot.send_message(message.chat.id, text="–í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –Ω–æ–≤–∞—è –∞–≤—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞ –∏–ª–∏ –±/—É –Ω–µ —Å—Ç–∞—Ä—à–µ 10 –ª–µ—Ç?", reply_markup=markup)
        bot.register_next_step_handler(msg, natural_person)

def natural_person_term(message):
    if (message.text == "‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*keyboard_one)
        bot.send_message(message.chat.id, text="–ù–∞ –∫–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –ª–∏–∑–∏–Ω–≥ –∞–≤—Ç–æ?".format(message.from_user),
                         reply_markup=markup)
    elif (message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*keyboard_three)
        msg = bot.send_message(message.chat.id, text="–ö–∞–∫–æ–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=markup)
        bot.register_next_step_handler(msg, natural_person_car)

    elif (message.text.isdigit()):
        global cost
        cost = message.text
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*term)
        msg = bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ä–æ–∫ –ª–∏–∑–∏–Ω–≥–∞.", reply_markup=markup)
        bot.register_next_step_handler(msg, natural_person_advance)

    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(*back)
        msg = bot.send_message(message.chat.id, text="–í–≤–µ–¥–∏—Ç–µ <b>–ø—Ä–∞–≤–∏–ª—å–Ω–æ</b> —Å—Ç–æ–∏–º–æ—Å—Ç—å –ª–µ–≥–∫–æ–≤–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è —Å –ù–î–°.",
                               reply_markup=markup, parse_mode='html')
        bot.register_next_step_handler(msg, natural_person_term)

def natural_person_advance(message):
    if (message.text == "‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*keyboard_one)
        bot.send_message(message.chat.id, text="–ù–∞ –∫–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –ª–∏–∑–∏–Ω–≥ –∞–≤—Ç–æ?".format(message.from_user),
                         reply_markup=markup)
    elif (message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*back)
        msg = bot.send_message(message.chat.id, text="–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –ª–µ–≥–∫–æ–≤–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è —Å –ù–î–°.", reply_markup=markup)
        bot.register_next_step_handler(msg, natural_person_term)

    else:
        global advance
        advance = message.text
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*percent)
        msg = bot.send_message(message.chat.id,
                               text="–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –í–∞—à–µ–≥–æ –∞–≤–∞–Ω—Å–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ (–æ—Ç –ø–æ–ª–Ω–æ–π —Å—Ç-—Ç–∏ –ª–µ–≥–∫–æ–≤–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è).",
                               reply_markup=markup)
        bot.register_next_step_handler(msg, natural_person_count)


def natural_person_count(message):
    if (message.text == "‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*keyboard_one)
        bot.send_message(message.chat.id, text="–ù–∞ –∫–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –ª–∏–∑–∏–Ω–≥ –∞–≤—Ç–æ?".format(message.from_user),
                         reply_markup=markup)

    elif (message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*term)
        msg = bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ä–æ–∫ –ª–∏–∑–∏–Ω–≥–∞.", reply_markup=markup)
        bot.register_next_step_handler(msg, natural_person_advance)

    else:
        global percent_advance
        percent_advance = message.text
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*end)
        pers = percent_advance[0:2]
        advan = (int(cost)/100)*(int(percent_advance[0:2]))

        if (int(advance[0:2]) == 84):
            pay_one = (int(cost) - (int(cost) / 100) * (int(percent_advance[0:2]))) / int(advance[0:2])
            pay_two = ((int(cost) - (int(cost) / 100) * (int(percent_advance[0:2]))) / 100 * 20) / 12
            pay = round(pay_one + pay_two)
            bot.send_message(message.chat.id,
                         text=f"<b>–í–∞—à–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ –ª–∏–∑–∏–Ω–≥—É:</b>\n\n"
                              f"–°—Ç–æ–∏–º–æ—Å—Ç—å: <b>{cost} BYN</b>\n"
                              f"–ê–≤–∞–Ω—Å:  <b>{pers}%  ({advan} BYN)</b>\n\n"
                              f"–°—Ä–æ–∫ –ª–∏–∑–∏–Ω–≥–∞:  <b>{advance[0:2]} –º–µ—Å—è—Ü–µ–≤</b>\n"
                              f"–°—Ä–µ–¥–Ω–∏–π –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂:  <b>{pay} BYN</b>\n\n"
                              f"–ï—Å–ª–∏ —É –≤–∞—Å –ø–æ—è–≤–∏–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +375 29 686 68 95 (–ü–ù-–ß–¢ 9:30-17:30; –ü–¢ 9:30-16:15).",
                              reply_markup=markup, parse_mode='html')
        else:
            pay_one = (int(cost) - (int(cost)/100)*(int(percent_advance[0:2])))/int(advance[0:2])
            pay_two = ((int(cost) - (int(cost)/100)*(int(percent_advance[0:2])))/100*17.5)/12
            pay = round(pay_one+pay_two)
            bot.send_message(message.chat.id,
                                   text=f"<b>–í–∞—à–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ –ª–∏–∑–∏–Ω–≥—É:</b>\n\n"
                                        f"–°—Ç–æ–∏–º–æ—Å—Ç—å: <b>{cost} BYN</b>\n"
                                        f"–ê–≤–∞–Ω—Å:  <b>{pers}%  ({advan} BYN)</b>\n\n"
                                        f"–°—Ä–æ–∫ –ª–∏–∑–∏–Ω–≥–∞:  <b>{advance[0:2]} –º–µ—Å—è—Ü–µ–≤</b>\n"
                                        f"–°—Ä–µ–¥–Ω–∏–π –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂:  <b>{pay} BYN</b>\n\n"
                                        f"–ï—Å–ª–∏ —É –≤–∞—Å –ø–æ—è–≤–∏–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +375 29 686 68 95 (–ü–ù-–ß–¢ 9:30-17:30; –ü–¢ 9:30-16:15).",
                                        reply_markup=markup, parse_mode='html')


def legal_entity(message):
    if (message.text in ["üöó –ù–æ–≤–∞—è", "üöï –ë/—É –Ω–µ —Å—Ç–∞—Ä—à–µ 10 –ª–µ—Ç", "üõª –ë/—É —Å—Ç–∞—Ä—à–µ 10 –ª–µ—Ç"]):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*keyboard_three)
        msg = bot.send_message(message.chat.id, text="–ö–∞–∫–æ–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=markup)
        bot.register_next_step_handler(msg, legal_entity_car)

    elif (message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*keyboard_one)
        msg = bot.send_message(message.chat.id, text="–ù–∞ –∫–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –ª–∏–∑–∏–Ω–≥ –∞–≤—Ç–æ?", reply_markup=markup)
        bot.register_next_step_handler(msg, func)

    elif (message.text == "‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*keyboard_one)
        bot.send_message(message.chat.id, text="–ù–∞ –∫–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –ª–∏–∑–∏–Ω–≥ –∞–≤—Ç–æ?".format(message.from_user),
                         reply_markup=markup)
def legal_entity_car(message):
    if (message.text in ["üöò –õ–µ–≥–∫–æ–≤–æ–π", "üöö –ì—Ä—É–∑–æ–≤–æ–π", "üîå –≠–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª–∏"]):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(*back)
        msg = bot.send_message(message.chat.id, text="–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –ª–µ–≥–∫–æ–≤–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è —Å –ù–î–°.", reply_markup=markup)
        bot.register_next_step_handler(msg, legal_entity_term)

    elif (message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*keyboard_two)
        msg = bot.send_message(message.chat.id, text="–í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –Ω–æ–≤–∞—è –∞–≤—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞ –∏–ª–∏ –±/—É –Ω–µ —Å—Ç–∞—Ä—à–µ 10 –ª–µ—Ç?", reply_markup=markup)
        bot.register_next_step_handler(msg, legal_entity)

    elif (message.text == "‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*keyboard_one)
        bot.send_message(message.chat.id, text="–ù–∞ –∫–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –ª–∏–∑–∏–Ω–≥ –∞–≤—Ç–æ?".format(message.from_user),
                         reply_markup=markup)
def legal_entity_term(message):
    if (message.text == "‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*keyboard_one)
        bot.send_message(message.chat.id, text="–ù–∞ –∫–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –ª–∏–∑–∏–Ω–≥ –∞–≤—Ç–æ?".format(message.from_user),
                         reply_markup=markup)

    elif (message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*keyboard_three)
        msg = bot.send_message(message.chat.id, text="–ö–∞–∫–æ–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=markup)
        bot.register_next_step_handler(msg, legal_entity_car)

    elif (message.text.isdigit()):
        global cost
        cost = message.text
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*term)
        msg = bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ä–æ–∫ –ª–∏–∑–∏–Ω–≥–∞.", reply_markup=markup)
        bot.register_next_step_handler(msg, legal_entity_advance)

    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(*back)
        msg = bot.send_message(message.chat.id, text="–í–≤–µ–¥–∏—Ç–µ <b>–ø—Ä–∞–≤–∏–ª—å–Ω–æ</b> —Å—Ç–æ–∏–º–æ—Å—Ç—å –ª–µ–≥–∫–æ–≤–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è —Å –ù–î–°.",
                               reply_markup=markup, parse_mode='html')
        bot.register_next_step_handler(msg, legal_entity_term)

def legal_entity_advance(message):
    if(message.text == "‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*keyboard_one)
        bot.send_message(message.chat.id, text="–ù–∞ –∫–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –ª–∏–∑–∏–Ω–≥ –∞–≤—Ç–æ?".format(message.from_user),
                         reply_markup=markup)

    elif (message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*back)
        msg = bot.send_message(message.chat.id, text="–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –ª–µ–≥–∫–æ–≤–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è —Å –ù–î–°.", reply_markup=markup)
        bot.register_next_step_handler(msg, legal_entity_term)

    else:
        global advance
        advance = message.text
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*percent)
        msg = bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –í–∞—à–µ–≥–æ –∞–≤–∞–Ω—Å–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ (–æ—Ç –ø–æ–ª–Ω–æ–π —Å—Ç-—Ç–∏ –ª–µ–≥–∫–æ–≤–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è).", reply_markup=markup)
        bot.register_next_step_handler(msg, legal_entity_count)

def legal_entity_count(message):
    if (message.text == "‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*keyboard_one)
        bot.send_message(message.chat.id, text="–ù–∞ –∫–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –ª–∏–∑–∏–Ω–≥ –∞–≤—Ç–æ?".format(message.from_user),
                         reply_markup=markup)

    elif (message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*term)
        msg = bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ä–æ–∫ –ª–∏–∑–∏–Ω–≥–∞.", reply_markup=markup)
        bot.register_next_step_handler(msg, legal_entity_advance)

    else:
        global percent_advance
        percent_advance = message.text
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, input_field_placeholder="–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é:")
        markup.add(*end)
        pers = percent_advance[0:2]
        advan = (int(cost)/100)*(int(percent_advance[0:2]))
        pay_one = (int(cost) - (int(cost)/100)*(int(percent_advance[0:2])))/int(advance[0:2])
        pay_two = ((int(cost) - (int(cost)/100)*(int(percent_advance[0:2])))/100*15.5)/12
        pay = round(pay_one+pay_two)
        bot.send_message(message.chat.id,
                               text=f"<b>–í–∞—à–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ –ª–∏–∑–∏–Ω–≥—É:</b>\n\n"
                                    f"–°—Ç–æ–∏–º–æ—Å—Ç—å: <b>{cost} BYN</b>\n"
                                    f"–ê–≤–∞–Ω—Å:  <b>{pers}%  ({advan} BYN)</b>\n\n"
                                    f"–°—Ä–æ–∫ –ª–∏–∑–∏–Ω–≥–∞:  <b>{advance[0:2]} –º–µ—Å—è—Ü–µ–≤</b>\n"
                                    f"–°—Ä–µ–¥–Ω–∏–π –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂:  <b>{pay} BYN</b>\n\n"
                                    f"–ï—Å–ª–∏ —É –≤–∞—Å –ø–æ—è–≤–∏–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +375 29 686 68 95 (–ü–ù-–ß–¢ 9:30-17:30; –ü–¢ 9:30-16:15).",
                               reply_markup=markup, parse_mode='html')


bot.polling(non_stop=True, interval=0)
